// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model IngresosEgresosConcepto {
  id Int @id @default(autoincrement())
  name String @unique
  description String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  ingresos_egresos IngresosEgresos[]
}

model UserRol {
  id Int @id @default(autoincrement())
  rol String @unique
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  user User[]
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  name String
  password String
  telefono String?
  rol UserRol @relation(fields: [id_rol], references: [id])
  id_rol Int
  provider String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  ingresos_egresos IngresosEgresos[]
  login Login?
}

model IngresosEgresos {
  id Int @id @default(autoincrement())
  monto Float
  user User @relation(fields: [id_user], references: [id])
  id_user Int
  concepto IngresosEgresosConcepto @relation(fields: [id_concepto], references: [id])
  id_concepto Int
  fecha DateTime
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}

model Login {
  id Int @id @default(autoincrement())
  user User @relation(fields: [id_user], references: [id])
  id_user Int @unique
  token String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
}
